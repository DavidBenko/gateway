# nanoscale/gateway:deploy
# version 5.4.0
FROM nanoscale/gateway:run-5.4.0
MAINTAINER Jeff Bozek, jeff@nanoscale.io

ADD build/gateway-linux-amd64 /gateway/gateway
ADD build/gateway-soap-client.jar /gateway/gateway-soap-client.jar
WORKDIR /gateway

# SERVER MODE
ENV SERVER false

# DATABASE CONFIG
ENV DB_MIGRATE true
ENV DB_DRIVER sqlite3
ENV DB_MAX_CONN 5
ENV DB_CONN "gateway.db"

# ADMIN CONFIG
ENV ADMIN_SESSION_AUTH_KEY please-change-me
ENV ADMIN_PATH /admin/
ENV ADMIN_UI_PATH_PREFIX /admin/
ENV ADMIN_HOST 0.0.0.0
ENV ADMIN_ENABLE_REGISTRATION true
ENV ADMIN_SHOW_VERSION true
ENV ADMIN_SESSION_COOKIE_DOMAIN 0.0.0.0
ENV JOBS true
ENV GOOGLE_ANALYTICS_TRACKING_ID ""
ENV ADMIN_API_HOST ""
ENV ADMIN_CORS_ENABLED true
ENV ADMIN_CORS_ORIGIN "*"
ENV ADMIN_BASIC_AUTH_USER "admin"
ENV ADMIN_BASIC_AUTH_PASSWORD "admin"
ENV WS_HEARTBEAT_INTERVAL 60
ENV WS_WRITE_DEADLINE 10
ENV WS_READ_DEADLINE 10
ENV REPL_MAX_FRAME_SIZE 1024

# PROXY CONFIG
ENV PROXY_HOST 0.0.0.0
ENV PROXY_DOMAIN localhost
ENV PROXY_ENABLE_OS_ENV false
ENV PROXY_CODE_TIMEOUT 5
ENV PROXY_HTTP_TIMEOUT 60
ENV DEFAULT_API_ACCESS_SCHEME "http://{{hosts.[0]}}:5000"
ENV CACHE_APIS false
ENV HEALTH_CHECK_PATH "/__gw-health-check"
ENV KEY_CACHE_SIZE 0
ENV REMOTE_ENDPOINT_CACHE_SIZE 0

# LOCAL STORE CONFIG
ENV STORE_TYPE boltdb
ENV STORE_MIGRATE true
ENV STORE_MAX_CONN 5
ENV STORE_CONN "store.db"

# LOGGING CONFIG
ENV ENABLE_LOGGING_BROKER true
ENV LOGGING_BROKER_HOST localhost
ENV LOGGING_BROKER_WS localhost:5000
ENV LOGGING_BROKER_PUB_PORT 5555
ENV LOGGING_BROKER_SUB_PORT 5556
ENV BLEVE_LOGGING_FILE ""
ENV BLEVE_LOGGING_DELETE_AFTER 30
ENV ELASTIC_LOGGING_URL ""
ENV ELASTIC_LOGGING_DELETE_AFTER 30
ENV POSTGRES_LOGGING_ENABLED false
ENV POSTGRES_LOGGING_MIGRATE false
ENV POSTGRES_LOGGING_CONN_STRING ""
ENV POSTGRES_LOGGING_MAX_CONNECTIONS 50
ENV POSTGRES_LOGGING_DELETE_AFTER 30

# SMTP CONFIG
ENV SMTP_USER ""
ENV SMTP_PASSWORD ""
ENV SMTP_SENDER ""
ENV SMTP_SERVER ""
ENV SMTP_PORT 25
ENV EMAIL_SCHEME http
ENV EMAIL_HOST localhost
ENV EMAIL_PORT 5000

# ERROR REPORTING
ENV AIRBRAKE_API_KEY ""
ENV AIRBRAKE_ENVIRONMENT ""
ENV AIRBRAKE_PROJECT_ID 1

# REMOTE ENDPOINTS
ENV SCRIPT_ENABLED false
ENV STORE_ENABLED true
ENV DOCKER_ENABLED false
ENV SMTP_ENABLED true
ENV SOAP_ENABLED true
ENV JOBS_ENABLED true
ENV REMOTE_ENDPOINT_SCRUB_DATA false
ENV CUSTOM_FUNCTIONS_ENABLED false
ENV KEYS_ENABLED true

# PUSH CONFIG
ENV ENABLE_PUSH_BROKER true
ENV PUSH_BROKER_HOST "localhost
ENV PUSH_BROKER_PUB_PORT "5557"
ENV PUSH_BROKER_SUB_PORT "5558"
ENV PUSH_BROKER_TRANSPORT "tcp"
ENV PUSH_CONNECTION_TIMEOUT 2
ENV PUSH_MQTT_URI "tcp://:1883"

# DOCKER CONFIG
ENV DOCKER_MEMORY 128
ENV DOCKER_CPU_SHARES 0
ENV DOCKER_HOST ""
ENV DOCKER_TLS false
ENV DOCKER_TLS_CERT_CONTENT ""
ENV DOCKER_TLS_CACERT_CONTENT ""
ENV DOCKER_TLS_KEY_CONTENT ""

# STRIPE CONFIG
ENV STRIPE_SECRET_KEY ""
ENV STRIPE_PUBLISHABLE_KEY ""
ENV STRIPE_FALLBACK_PLAN ""
ENV STRIPE_MIGRATE_ACCOUNTS false

# JOBS CONFIG
ENV JOBS_EXECUTE true
ENV JOBS_ENABLE_OS_ENV false
ENV JOBS_CODE_TIMEOUT 5
ENV JOBS_NUM_ERR_LINES 2

# STATS CONFIG
ENV STATS_COLLECT true
ENV STATS_MIGRATE true
ENV STATS_DRIVER "sqlite3"
ENV STATS_CONN_STRING "gateway-stats.db"
ENV STATS_MAX_CONNECTIONS 5

# Database format: "dbname=my_db user=user sslmode=disable host=my_host password=my_password"
ENTRYPOINT ./gateway -server=$SERVER -db-migrate=$DB_MIGRATE -store-migrate=$STORE_MIGRATE -proxy-cache-apis=$CACHE_APIS \
  -proxy-host=$PROXY_HOST  -proxy-domain=$PROXY_DOMAIN -proxy-enable-os-env=$PROXY_ENABLE_OS_ENV \
  -admin-host=$ADMIN_HOST -admin-enable-registration=$ADMIN_ENABLE_REGISTRATION -admin-session-auth-key=$ADMIN_SESSION_AUTH_KEY -admin-path-prefix=$ADMIN_PATH -admin-session-cookie-domain=$ADMIN_SESSION_COOKIE_DOMAIN -admin-show-version=$ADMIN_SHOW_VERSION \
  -enable-broker=$ENABLE_LOGGING_BROKER -broker=$LOGGING_BROKER_HOST -broker-pub-port=$LOGGING_BROKER_PUB_PORT -broker-sub-port=$LOGGING_BROKER_SUB_PORT -broker-ws=$LOGGING_BROKER_WS \
  -bleve-logging-file=$BLEVE_LOGGING_FILE -bleve-logging-delete-after=$BLEVE_LOGGING_DELETE_AFTER -elastic-logging-url="$ELASTIC_LOGGING_URL" -elastic-logging-delete-after=$ELASTIC_LOGGING_DELETE_AFTER -jobs=$JOBS \
  -remote-endpoint-script-enabled=$SCRIPT_ENABLED -remote-endpoint-store-enabled=$STORE_ENABLED \
  -airbrake-api-key="$AIRBRAKE_API_KEY" -airbrake-environment="$AIRBRAKE_ENVIRONMENT" -airbrake-project-id="$AIRBRAKE_PROJECT_ID" \
  -smtp-user="$SMTP_USER" -smtp-password="$SMTP_PASSWORD" -smtp-sender="$SMTP_SENDER" -smtp-server="$SMTP_SERVER" -smtp-port=$SMTP_PORT -smtp-email-scheme=$EMAIL_SCHEME -smtp-email-host="$EMAIL_HOST" -smtp-email-port=$EMAIL_PORT \
  -proxy-code-timeout=$PROXY_CODE_TIMEOUT -proxy-http-timeout=$PROXY_HTTP_TIMEOUT -proxy-health-check-path="$HEALTH_CHECK_PATH" \
  -admin-default-api-access-scheme="$DEFAULT_API_ACCESS_SCHEME" \
  -admin-google-analytics-tracking-id="$GOOGLE_ANALYTICS_TRACKING_ID" \
  -db-driver=$DB_DRIVER  -db-conn-string="$DB_CONN" -db-max-connections=$DB_MAX_CONN -store-type=$STORE_TYPE -store-conn-string="$STORE_CONN" -store-max-connections=$STORE_MAX_CONN \
  -remote-endpoint-docker-enabled=$DOCKER_ENABLED -docker-memory=$DOCKER_MEMORY -docker-cpu-shares=$DOCKER_CPU_SHARES -docker-host="$DOCKER_HOST" -docker-tls="$DOCKER_TLS" -docker-tls-cert-content="$DOCKER_TLS_CERT_CONTENT" -docker-tls-cacert-content="$DOCKER_TLS_CACERT_CONTENT" -docker-tls-key-content="$DOCKER_TLS_KEY_CONTENT"  \
  -remote-endpoint-smtp-enabled=$SMTP_ENABLED -remote-endpoint-soap-enabled=$SOAP_ENABLED \
  -admin-api-host=$ADMIN_API_HOST -admin-cors-enabled=$ADMIN_CORS_ENABLED -admin-cors-origin="$ADMIN_CORS_ORIGIN" -admin-username="$ADMIN_BASIC_AUTH_USER" -admin-password="$ADMIN_BASIC_AUTH_PASSWORD" \
  -stripe-secret-key="$STRIPE_SECRET_KEY" -stripe-publishable-key="$STRIPE_PUBLISHABLE_KEY" -stripe-fallback-plan="$STRIPE_FALLBACK_PLAN" -stripe-migrate-accounts=$STRIPE_MIGRATE_ACCOUNTS \
  -enable-push-broker=$ENABLE_PUSH_BROKER -push-broker=$PUSH_BROKER_HOST -push-broker-pub-port=$PUSH_BROKER_PUB_PORT -push-broker-sub-port=$PUSH_BROKER_SUB_PORT -push-broker-transport=$PUSH_BROKER_TRANSPORT -push-connect-timeout=$PUSH_CONNECTION_TIMEOUT -push-mqtt-uri=$PUSH_MQTT_URI \
  -job-enable=$JOBS_EXECUTE -job-enable-os-env=$JOBS_ENABLE_OS_ENV -job-code-timeout=$JOBS_CODE_TIMEOUT -job-code-error-lines=$JOBS_NUM_ERR_LINES -remote-endpoint-job-enabled=$JOBS_ENABLED -remote-endpoint-scrub-data=$REMOTE_ENDPOINT_SCRUB_DATA \
  -ws-heartbeat-interval=$WS_HEARTBEAT_INTERVAL -ws-write-deadline=$WS_WRITE_DEADLINE -admin-ui-path-prefix=$ADMIN_UI_PATH_PREFIX -stats-collect=$STATS_COLLECT -stats-migrate=$STATS_MIGRATE -stats-driver="$STATS_DRIVER" -stats-conn-string="$STATS_CONN_STRING" -stats-max-connections=$STATS_MAX_CONNECTIONS \
  -ws-read-deadline=$WS_READ_DEADLINE -repl-maximum-frame-size=$REPL_MAX_FRAME_SIZE -remote-endpoint-custom-function-enabled=$CUSTOM_FUNCTIONS_ENABLED -proxy-key-cache-size=$KEY_CACHE_SIZE -proxy-remote-endpoint-cache-size=$REMOTE_ENDPOINT_CACHE_SIZE \
  -remote-endpoint-key-enabled=$KEYS_ENABLED \
  -postgres-logging-enable=$POSTGRES_LOGGING_ENABLED -postgres-logging-migrate=$POSTGRES_LOGGING_MIGRATE -postgres-logging-conn-string="$POSTGRES_LOGGING_CONN_STRING" -postgres-logging-max-connections=$POSTGRES_LOGGING_MAX_CONNECTIONS \
  -postgres-logging-delete-after=$POSTGRES_LOGGING_DELETE_AFTER
