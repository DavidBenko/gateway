<h1>Release 0.1 ("Grenoble")</h1>

<p><b>2013-06-11</b></p>

<p>After three years of development, we're proud to release our first
version of Camlistore, 0.1, codename "Grenoble", the beautiful city
where we're currently releasing it from.</p>

<center><div style='font-size: 18pt; font-weight: bold'><a href="https://github.com/bradfitz/camlistore/archive/0.1.zip">camlistore-0.1.zip</a></div>
<div style='margin-top: 0.5em'>
Or browse at Github: <a href="https://github.com/bradfitz/camlistore/tree/0.1">github.com/bradfitz/camlistore/tree/0.1</a>
</div>
</center>

<p>As reflected in the version number, Camlistore is not yet done, but
it's at least ready for people to start using and playing with.  We've
been using it ourselves for a year.</p>

<p>We plan to do subsequent releases in a more timely fashion.</p>

<h1>What works</h1>

<ul>
  <li>Linux and OS X support. And probably any Unix.</li>
  <li>Command-line tools:<ul>
        <li><b><code>camput</code></b>: upload blobs, files, or directories (any size). The camput tool can also make share claims to share those resources with others, or can be used to make raw permanodes & claims.</li>
        <li><b><code>camget</code></b>: get blobs or files (not directories), either your own, or from friends' Camlistore servers if they've shared with you.</li>
        <li><b><code>cammount</code></b>: FUSE-mount your Camlistore (Linux and OS X only): either static directories (e.g. backups from camput), or a virtual "recent" directories of recent files uploaded (e.g. from your Android phone)</li>
        <li><b><code>camtool</code></b>: additional swiss-army knife tools, and manual sync tool ("camtool sync").</li>
     </ul>
  </li>
  <li><b><code>camlistored</code></b>: the server.</li>
  <li>Web UI (optional part of the server, on by default). Not great, but lets you browse your Camlistore resources.</li>
  <li>Android client: upload photos ("Share to Camlistore")</li>
  <li>Blob storage options: local disk, Amazon S3, Google Cloud Storage, ...</li>
  <li>Search index storage options: in-memory, SQLite, MySQL, Postgres, Mongo, ...</li>
  <li>All sorts of replication:
      <ul>
        <li><b><code>camlistored</code></b>: The server supports both asynchronous and synchronous replication from incoming blobs to any storage backend, which includes other remote Camlistore servers</li>
        <li><b><code>camtool sync</code></b>: The camtool command supports syncing from servers (or local disk blob directories) to other servers (or other local disk blob directories), as well as a "third-leg" mode, where you can sync from <b>A</b> to <b>B></b> by using the network to communicate differences, but instead copying missing blobs to destination <b>C</b> (e.g. a local portable harddisk to be manually transported to <b>B</b>)</li>
      </ul>
  </li>
  <li>The server and command-line tools are written in <a href="http://golang.org/">Go</a>, so it runs everywhere, and easily (no library versioning stress). Just a single binary to copy to your Raspberry Pi running NetBSD or Linux or whatever.</li>
  <li>Sharding, mirroring, unioning, ...</li>
</ul>


<h1>What doesn't work (or work well)</h1>

<p>Things currently known to be broken or not yet finished:</p>

<ul>
  <li>Windows support. Has worked at times, but may currently be broken again. It will improve and hopefully stay stable in future releases.</li>
  <li>iOS client. Nascent.</li>
  <li>WebDAV server (for mounting your Camlistore resources on Windows) is currently broken, but once worked.</li>
  <li>App Engine support. App Engine used to work, but is currently broken until a new App Engine SDK comes out with Go 1.1 support (soon).</li>
  <li>Encryption. Designed, but not implemented.</li>
  <li>The web UI could use some JavaScript / CSS / design love.</li>
</ul>

<h1>What's coming</h1>

Much is planned:

<ul>
   <li>Much more documentation</li>
   <li>Photo gallery & blog serving</li>
   <li>More sharing support</li>
   <li>Encryption</li>
   <li>Import from social networks & web services</li>
   <li>Fixing all the broken things.</li>
   <li>Optimizations</li>
   <li>Better, sexier web interface</li>
   <li>Easier to install and use</li>
</ul>

<h1>Get involved!</h1>

<p>We welcome feedback, feature requests, bug reports, and code
contributions!</p>

<p>Feel free to email us on our <a
href="https://groups.google.com/forum/?fromgroups#!forum/camlistore">mailing
list</a>, and/or <a
href="//github.com/camlistore/camlistore/issues/new">file a bug</a> (or
see <a href="//github.com/camlistore/camlistore/issues">existing
bugs</a>).  </p>

<p>While we welcome user bug reports, we also welcome code
contributions. See <a href="/docs/contributing">the Contributing
page</a> for details. While most the codebase (the server and
command-line tools) are written in <a href="http://golang.org">Go</a>,
there's also a lot of JavaScript which needs love, as well as Java
(for Android) and Objective C (for iOS). Or anything useful you'd like
to contribute.</p>
