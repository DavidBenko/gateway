desc "Prints usage information"
task :usage do
  puts "Specify the project, then the command"
  puts "   e.g."
  puts "      rake tour seed"
  puts "   or"
  puts "      rake tour update"
end

desc "Use the tour project files"
task :tour do
  @project = "tour"
end

desc "Seed the server"
task :seed do
  require_project!
  load_server
end

desc "Update the server"
task :update do
  require_project!
  load_server(update: true)
end

desc "Cleans the shared log in ../node"
task :clean do
  `rm -f ../node/log`
end

def require_project!
  unless @project
    puts "Please use with a project!"
    puts "   e.g."
    puts "      rake <project name> <command>"
    puts ""
    puts "'rake usage' for more."
    exit(1)
  end
end

def load_server(options = {})
  update = options[:update]
  run "./wrap.rb #{@project}/routes.js | curl -s -f -X PUT -d @- localhost:5000/admin/routes"
  endpoints.each_with_index do |endpoint, index|
    command = %{./wrap.rb "#{@project}/endpoints/#{endpoint}" wrapper=proxyEndpoint name="#{endpoint.split(".").first}" | curl -s -f -d @- }
    command += "-X PUT " if update
    command += "localhost:5000/admin/proxyEndpoints"
    command += "/#{index+1}" if update
    run command 
  end
  libraries.each_with_index do |library, index|
    command = %{./wrap.rb "#{@project}/libraries/#{library}" wrapper=library name="#{library.split(".").first}" | curl -s -f -d @- }
    command += "-X PUT " if update
    command += "localhost:5000/admin/libraries"
    command += "/#{index+1}" if update
    run command 
  end
end

def endpoints; scripts("endpoints"); end
def libraries; scripts("libraries"); end
def scripts(dir)
  scripts = Dir.glob("#{@project}/#{dir}/*")
  scripts.map!{|x|x.split("/").last}
  scripts.sort
end

def run(command)
  print "#{command}"
  `#{command}`
  if $?.to_i != 0
    puts " \e[31merror\e[0m"
  else
    puts " \e[32msuccess\e[0m"
  end
end